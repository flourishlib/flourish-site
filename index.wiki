<<include path="./partials/header.html" title="Flourish, PHP Unframework">>
{{{
#!raw
<script src="/js/newest_tag.js"></script>
}}}

{{{
#!raw
<div class="sidebar">
    <div class="main_actions">
        <a href="/docs/Download" class="newest-tag-href action">
            Download: <strong>v<span class="newest-tag">–</span></strong></em>
        </a>
        <a href="/docs/GettingStarted" class="action">Getting Started</a>
        <a href="/docs/HowDoI" class="action">How Do I…?</a>
        <a href="/docs" class="action">Documentation</a>
    </div>
    <div class="more_info">
        <p class="beta">
            Flourish is currently in <strong>beta</strong>. For information about the release schedule, please see the <strong><a href="/docs/Roadmap">roadmap</a></strong>.
        </p>
        <h2>Thank You!</h2>
        <p>We just wanted to say thanks to those who have contributed to the project — <a href="/Support#ThankYou">see who</a>.
        </p>
        <p>Interested in supporting the project? Visit the <a href="/Support">Support page</a>.</p>
        <h2>Around the Web</h2>
        <ul class="social">
        	<li>
        		<a href="http://twitter.com/flourishlib">
        			<img src="/img/twitter.gif" alt="(Twitter Icon)" />
        			Twitter
        		</a>
        	</li>
        	<li>
        		<a href="http://github.com/flourishlib/flourish">
        			<img src="/img/github.gif" alt="(GitHub Icon)" />
        			GitHub
        		</a>
        	</li>
        	<li>
        		<a href="http://webchat.freenode.net/?channels=#flourishlib">
        		<img src="/img/irc.gif" alt="(IRC Icon)" />
        		IRC
        		</a>
        	</li>
        </ul>
    </div>
</div>

<div class="intro">
<p>
<em>Flourish</em> provides a strong, base set of <em>PHP classes</em> that run
<em>pretty much anywhere</em>, helping you focus on solving more interesting
problems.
</p>
<p>
Extensive documentation and a sane API help you get stuff done, whether you are
building a new app or maintaining a legacy website.
</p>
</div>
}}}

== Why Use Flourish? ==
{{{
#!raw
<p>You will find Flourish useful if you need to write code that is any of the following:</p>
<ul class="why_first">
    <li>Promoted security best-practices</li>
    <li>Consistent and easy to understand</li>
    <li>Needs to model simple or complex databases, especially existing schemas</li>
    <li>Works with international data</li>
    <li>Can perform accurate math calculations</li>
    <li>Easily manipulates images</li>
</ul>
<ul class="why_second">
    <li>Able to run on different databases (MySQL, PostgreSQL, SQLite, MSSQL, Oracle, DB2)</li>
    <li>Can be used on closed-source projects</li>
    <li>Needs to run on different versions of PHP</li>
    <li>Needs an architecture other than MVC</li>
    <li>Plays nicely with other libraries and frameworks</li>
</ul>
<div class="why_clear"></div>

<script type="text/javascript">
<!--
$(function(){
    var p = $('<p>Want to see more? </p>');
    var a = $('<a href="#">Show how to upload an image, resize it and make a thumbnail</a>');
    a.click(function(){
        $('#user_example').hide();
        $('#image_example').show();
        return false;
    });
    p.append(a);
    $('#user_example').append(p);

    var p2 = $('<p>Looking for the original? </p>');
    var a2 = $('<a href="#">Switch back to find all users and printing their names</a>');
    a2.click(function(){
        $('#image_example').hide();
        $('#user_example').show();
        return false;
    });
    p2.append(a2);
    $('#image_example').append(p2);

    $('#image_example').hide();
});

-->
</script>
<h2>View Example Code</h2>
<div id="user_example">
<p>Below is an example of how to retrieve all active users from the database and print their name.</p>
}}}
{{{
#!php
// Connect to our SQLite database
fORMDatabase::attach(new fDatabase('sqlite', '/path/to/database'));

// Create an object to represent rows in the database
class User extends fActiveRecord {
    // Return an iterable set of User objects
    public static function findActive() {
        return fRecordSet::build(
            'User',                            // Make User objects
            array('status=' => 'Active'),      // That are active
            array('date_registered' => 'desc') // Ordered by registration date
        );
    }
}

// Loop through and display the users' names
foreach (User::findActive() as $user) {
    echo $user->prepareFirstName() . ' ' . $user->prepareLastName() . '<br />';
}
}}}
{{{
#!raw
</div>
<div id="image_example">
<p>This example shows how to upload an image, resize it, and make a thumbnail.</p>
}}}
{{{
#!php
// Create an fUpload object to handle the file upload
$uploader = new fUpload();

// Require the user upload an image (with MIME type checking server-side)
$uploader->setMIMETypes(
	array('image/jpeg', 'image/gif', 'image/png'),
	'Please upload a .jpg, .png, or .gif image'
);

// Move the image and then resize to fit a 500x300 canvas
$image = $uploader->move('/path/to/images', 'image')
                  ->resize(500, 300)
                  ->saveChanges();

// Create a 32x32 thumbnail of the image
$thumb = $image->duplicate('/path/to/thumbs')
               ->cropToRatio(1,1)
               ->resize(32,32)
               ->saveChanges();
}}}
{{{
#!raw
</div>
}}}

== Features ==

=== Documentation ===

 - It includes [/docs extensive documentation] covering all code, plus the API and other general PHP topics
 - It includes [/docs/Security features and guidance to make sites more secure]

=== Compability ===

 - It works with PHP 5.1+
 - It loves Linux/BSD, Solaris and Windows environments
 - It uses UTF-8 everywhere and provides [/docs/fUTF8 UTF-8 functions] even without the [http://php.net/mbstring mbstring] extension
 - It provides [/docs/fNumber precise number support] even without the [http://php.net/bc bcmath] extension
 - It can [/docs/fImage manipulate images] and automatically detects if GD or ImageMagick is installed
 - It backports some PHP 5.2+ functionality to PHP 5.1 such as [/docs/fCookie Httponly cookies] and [/docs/fJSON JSON]
 - No shell access is required, simply [/docs/GettingStarted drop the classes in and go]

=== Database/ORM ===

 - It supports [/docs/fDatabase MySQL, PostgreSQL, SQLite, Oracle, IBM DB2 and Microsoft SQL Server]
 - It includes support for [/docs/FlourishSql one dialect of SQL] across all database types
 - It supports almost [/api/fDatabase all extensions for the supported databases]
 - It includes powerful, but intuitive [/docs/ObjectRelationalMapping object-relational mapping] features
   - Full support and auto-exploration of [/docs/fActiveRecord#RelatedRecordsOperations foreign key relationships]
   - Simple, shorthand notation for [/docs/fRecordSet querying sets of records]
   - [/docs/fActiveRecord#CreatingandLoadingRecords Multi-column primary key support]
   - [/docs/fORM#ExtendingtheORM A simple plugin system] using hooks and callbacks

=== And More… ===

 - It includes [/docs/fCore error/exception handling and debugging features] that make bug fixing much simpler
 - It is [/docs/InternationalizationLocalization built with internationalization and localization in mind]
 - It is [/license licensed under the MIT license]

Check out the [/docs documentation] for a list of all of the Flourish classes.

<<include path="./partials/footer.html">>